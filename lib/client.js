"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
require("juxtapose");
var _easywithstyle = /*#__PURE__*/ _interop_require_default(require("easy-with-style"));
var _easy = require("easy");
var _sufficient = require("sufficient");
var _fragmented = require("fragmented");
var _view = /*#__PURE__*/ _interop_require_default(require("./view"));
var _loading = /*#__PURE__*/ _interop_require_default(require("./view/div/loading"));
var _createMethods = /*#__PURE__*/ _interop_require_default(require("./createMethods"));
var _localStorage = require("./localStorage");
var _state = require("./state");
var _orientation = require("./utilities/orientation");
function _interop_require_default(obj) {
    return obj && obj.__esModule ? obj : {
        default: obj
    };
}
var renderStyles = _easywithstyle.default.renderStyles;
renderStyles();
(0, _localStorage.migratePersistentState)();
var scheduler = null, model = null, view = /*#__PURE__*/ React.createElement(_view.default, null), body = new _easy.Body();
_sufficient.controller.assignMethods(_createMethods.default, scheduler, model, view);
(0, _orientation.onOrientationChange)(function(orientation) {
    (0, _state.setOrientation)(orientation);
    view.updateZoom();
});
(0, _fragmented.onFragmentChange)(function(event, element, fragment) {
    var anchorId = "".concat(fragment);
    view.goToAnchor(anchorId);
});
(0, _orientation.getOrientation)(function(orientation) {
    var overlayHidden = (0, _state.isOverlayHidden)();
    (0, _state.setOrientation)(orientation);
    _loading.default.hide();
    body.mount(view);
    if (overlayHidden) {
        _sufficient.controller.hideOverlay();
        _sufficient.controller.showDivisions();
    }
});

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9jbGllbnQuanMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5cbmltcG9ydCBcImp1eHRhcG9zZVwiO1xuXG5pbXBvcnQgd2l0aFN0eWxlIGZyb20gXCJlYXN5LXdpdGgtc3R5bGVcIjsgIC8vL1xuXG5pbXBvcnQgeyBCb2R5IH0gZnJvbSBcImVhc3lcIjtcbmltcG9ydCB7IGNvbnRyb2xsZXIgfSBmcm9tIFwic3VmZmljaWVudFwiO1xuaW1wb3J0IHsgb25GcmFnbWVudENoYW5nZSB9IGZyb20gXCJmcmFnbWVudGVkXCI7XG5cbmltcG9ydCBWaWV3IGZyb20gXCIuL3ZpZXdcIjtcbmltcG9ydCBsb2FkaW5nRGl2IGZyb20gXCIuL3ZpZXcvZGl2L2xvYWRpbmdcIjtcbmltcG9ydCBjcmVhdGVNZXRob2RzIGZyb20gXCIuL2NyZWF0ZU1ldGhvZHNcIjtcblxuaW1wb3J0IHsgbWlncmF0ZVBlcnNpc3RlbnRTdGF0ZSB9IGZyb20gXCIuL2xvY2FsU3RvcmFnZVwiO1xuaW1wb3J0IHsgc2V0T3JpZW50YXRpb24sIGlzT3ZlcmxheUhpZGRlbiB9IGZyb20gXCIuL3N0YXRlXCI7XG5pbXBvcnQgeyBnZXRPcmllbnRhdGlvbiwgb25PcmllbnRhdGlvbkNoYW5nZSB9IGZyb20gXCIuL3V0aWxpdGllcy9vcmllbnRhdGlvblwiO1xuXG5jb25zdCB7IHJlbmRlclN0eWxlcyB9ID0gd2l0aFN0eWxlO1xuXG5yZW5kZXJTdHlsZXMoKTtcblxubWlncmF0ZVBlcnNpc3RlbnRTdGF0ZSgpO1xuXG5jb25zdCBzY2hlZHVsZXIgPSBudWxsLFxuICAgICAgbW9kZWwgPSBudWxsLFxuICAgICAgdmlldyA9XG5cbiAgICAgICAgPFZpZXcvPlxuXG4gICAgICAsXG4gICAgICBib2R5ID0gbmV3IEJvZHkoKTtcblxuY29udHJvbGxlci5hc3NpZ25NZXRob2RzKGNyZWF0ZU1ldGhvZHMsIHNjaGVkdWxlciwgbW9kZWwsIHZpZXcpO1xuXG5vbk9yaWVudGF0aW9uQ2hhbmdlKChvcmllbnRhdGlvbikgPT4ge1xuICBzZXRPcmllbnRhdGlvbihvcmllbnRhdGlvbik7XG5cbiAgdmlldy51cGRhdGVab29tKCk7XG59KTtcblxub25GcmFnbWVudENoYW5nZSgoZXZlbnQsIGVsZW1lbnQsIGZyYWdtZW50KSA9PiB7XG4gIGNvbnN0IGFuY2hvcklkID0gYCR7ZnJhZ21lbnR9YDtcblxuICB2aWV3LmdvVG9BbmNob3IoYW5jaG9ySWQpO1xufSk7XG5cbmdldE9yaWVudGF0aW9uKChvcmllbnRhdGlvbikgPT4ge1xuICBjb25zdCBvdmVybGF5SGlkZGVuID0gaXNPdmVybGF5SGlkZGVuKCk7XG5cbiAgc2V0T3JpZW50YXRpb24ob3JpZW50YXRpb24pO1xuXG4gIGxvYWRpbmdEaXYuaGlkZSgpO1xuXG4gIGJvZHkubW91bnQodmlldyk7XG5cbiAgaWYgKG92ZXJsYXlIaWRkZW4pIHtcbiAgICBjb250cm9sbGVyLmhpZGVPdmVybGF5KCk7XG5cbiAgICBjb250cm9sbGVyLnNob3dEaXZpc2lvbnMoKTtcbiAgfVxufSk7XG4iXSwibmFtZXMiOlsicmVuZGVyU3R5bGVzIiwid2l0aFN0eWxlIiwibWlncmF0ZVBlcnNpc3RlbnRTdGF0ZSIsInNjaGVkdWxlciIsIm1vZGVsIiwidmlldyIsIlZpZXciLCJib2R5IiwiQm9keSIsImNvbnRyb2xsZXIiLCJhc3NpZ25NZXRob2RzIiwiY3JlYXRlTWV0aG9kcyIsIm9uT3JpZW50YXRpb25DaGFuZ2UiLCJvcmllbnRhdGlvbiIsInNldE9yaWVudGF0aW9uIiwidXBkYXRlWm9vbSIsIm9uRnJhZ21lbnRDaGFuZ2UiLCJldmVudCIsImVsZW1lbnQiLCJmcmFnbWVudCIsImFuY2hvcklkIiwiZ29Ub0FuY2hvciIsImdldE9yaWVudGF0aW9uIiwib3ZlcmxheUhpZGRlbiIsImlzT3ZlcmxheUhpZGRlbiIsImxvYWRpbmdEaXYiLCJoaWRlIiwibW91bnQiLCJoaWRlT3ZlcmxheSIsInNob3dEaXZpc2lvbnMiXSwibWFwcGluZ3MiOiJBQUFBOzs7O1FBRU87b0VBRWU7b0JBRUQ7MEJBQ007MEJBQ007MkRBRWhCOzhEQUNNO29FQUNHOzRCQUVhO3FCQUNTOzJCQUNJOzs7Ozs7QUFFcEQsSUFBTSxBQUFFQSxlQUFpQkMsc0JBQVMsQ0FBMUJEO0FBRVJBO0FBRUFFLElBQUFBLG9DQUFzQjtBQUV0QixJQUFNQyxZQUFZLE1BQ1pDLFFBQVEsTUFDUkMscUJBRUUsb0JBQUNDLGFBQUksU0FHUEMsT0FBTyxJQUFJQyxVQUFJO0FBRXJCQyxzQkFBVSxDQUFDQyxhQUFhLENBQUNDLHNCQUFhLEVBQUVSLFdBQVdDLE9BQU9DO0FBRTFETyxJQUFBQSxnQ0FBbUIsRUFBQyxTQUFDQztJQUNuQkMsSUFBQUEscUJBQWMsRUFBQ0Q7SUFFZlIsS0FBS1UsVUFBVTtBQUNqQjtBQUVBQyxJQUFBQSw0QkFBZ0IsRUFBQyxTQUFDQyxPQUFPQyxTQUFTQztJQUNoQyxJQUFNQyxXQUFXLEFBQUMsR0FBVyxPQUFURDtJQUVwQmQsS0FBS2dCLFVBQVUsQ0FBQ0Q7QUFDbEI7QUFFQUUsSUFBQUEsMkJBQWMsRUFBQyxTQUFDVDtJQUNkLElBQU1VLGdCQUFnQkMsSUFBQUEsc0JBQWU7SUFFckNWLElBQUFBLHFCQUFjLEVBQUNEO0lBRWZZLGdCQUFVLENBQUNDLElBQUk7SUFFZm5CLEtBQUtvQixLQUFLLENBQUN0QjtJQUVYLElBQUlrQixlQUFlO1FBQ2pCZCxzQkFBVSxDQUFDbUIsV0FBVztRQUV0Qm5CLHNCQUFVLENBQUNvQixhQUFhO0lBQzFCO0FBQ0YifQ==