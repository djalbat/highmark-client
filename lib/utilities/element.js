"use strict";
Object.defineProperty(exports, "__esModule", {
    value: true
});
function _export(target, all) {
    for(var name in all)Object.defineProperty(target, name, {
        enumerable: true,
        get: all[name]
    });
}
_export(exports, {
    elementFromDOMElement: function() {
        return elementFromDOMElement;
    },
    elementsFromDOMElements: function() {
        return elementsFromDOMElements;
    },
    findDivByAnchorId: function() {
        return findDivByAnchorId;
    },
    scrollToAnchor: function() {
        return scrollToAnchor;
    }
});
var _selectors = require("../selectors");
function elementsFromDOMElements(domElements, Element) {
    var elements = domElements.map(function(domElement) {
        var element = elementFromDOMElement(domElement, Element);
        return element;
    });
    return elements;
}
function elementFromDOMElement(domElement, Element) {
    var element = /*#__PURE__*/ React.createElement(Element, null), className = classNameFromElement(element);
    addClassNameToDOMElement(domElement, className);
    element.domElement = domElement; ///
    domElement.__element__ = element; ///
    return element;
}
function findDivByAnchorId(anchorId) {
    var selector = _selectors.DIV_SELECTOR, anchorDOMElement = findAnchorDOMElement(anchorId), divDOMElement = anchorDOMElement.closest(selector);
    var div = divDOMElement.__element__;
    return div;
}
function scrollToAnchor(anchorId) {
    var anchorDOMElement = findAnchorDOMElement(anchorId);
    anchorDOMElement.scrollIntoView();
}
function findAnchorDOMElement(anchorId) {
    var selector = "a#".concat(anchorId), anchorDOMElement = document.querySelector(selector);
    return anchorDOMElement;
}
function classNameFromElement(element) {
    var domElement = element.getDOMElement(), className = domElement.className;
    return className;
}
function addClassNameToDOMElement(domElement, className) {
    var classList = domElement.classList;
    classList.add(className);
}

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlsaXRpZXMvZWxlbWVudC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcblxuaW1wb3J0IHsgRElWX1NFTEVDVE9SIH0gZnJvbSBcIi4uL3NlbGVjdG9yc1wiO1xuXG5leHBvcnQgZnVuY3Rpb24gZWxlbWVudHNGcm9tRE9NRWxlbWVudHMoZG9tRWxlbWVudHMsIEVsZW1lbnQpIHtcbiAgY29uc3QgZWxlbWVudHMgPSBkb21FbGVtZW50cy5tYXAoKGRvbUVsZW1lbnQpID0+IHtcbiAgICBjb25zdCBlbGVtZW50ID0gZWxlbWVudEZyb21ET01FbGVtZW50KGRvbUVsZW1lbnQsIEVsZW1lbnQpO1xuXG4gICAgcmV0dXJuIGVsZW1lbnQ7XG4gIH0pO1xuXG4gIHJldHVybiBlbGVtZW50cztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGVsZW1lbnRGcm9tRE9NRWxlbWVudChkb21FbGVtZW50LCBFbGVtZW50KSB7XG4gIGNvbnN0IGVsZW1lbnQgPVxuXG4gICAgICAgICAgPEVsZW1lbnQvPlxuXG4gICAgICAgICxcbiAgICAgICAgY2xhc3NOYW1lID0gY2xhc3NOYW1lRnJvbUVsZW1lbnQoZWxlbWVudCk7XG5cbiAgYWRkQ2xhc3NOYW1lVG9ET01FbGVtZW50KGRvbUVsZW1lbnQsIGNsYXNzTmFtZSlcblxuICBlbGVtZW50LmRvbUVsZW1lbnQgPSBkb21FbGVtZW50OyAgLy8vXG5cbiAgZG9tRWxlbWVudC5fX2VsZW1lbnRfXyA9IGVsZW1lbnQ7IC8vL1xuXG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZmluZERpdkJ5QW5jaG9ySWQoYW5jaG9ySWQpIHtcbiAgY29uc3Qgc2VsZWN0b3IgPSBESVZfU0VMRUNUT1IsXG4gICAgICAgIGFuY2hvckRPTUVsZW1lbnQgPSBmaW5kQW5jaG9yRE9NRWxlbWVudChhbmNob3JJZCksXG4gICAgICAgIGRpdkRPTUVsZW1lbnQgPSBhbmNob3JET01FbGVtZW50LmNsb3Nlc3Qoc2VsZWN0b3IpO1xuXG4gIGNvbnN0IHsgX19lbGVtZW50X186IGRpdiB9ID0gZGl2RE9NRWxlbWVudDtcblxuICByZXR1cm4gZGl2O1xufVxuXG5leHBvcnQgZnVuY3Rpb24gc2Nyb2xsVG9BbmNob3IoYW5jaG9ySWQpIHtcbiAgY29uc3QgYW5jaG9yRE9NRWxlbWVudCA9IGZpbmRBbmNob3JET01FbGVtZW50KGFuY2hvcklkKTtcblxuICBhbmNob3JET01FbGVtZW50LnNjcm9sbEludG9WaWV3KCk7XG59XG5cbmZ1bmN0aW9uIGZpbmRBbmNob3JET01FbGVtZW50KGFuY2hvcklkKSB7XG4gIGNvbnN0IHNlbGVjdG9yID0gYGEjJHthbmNob3JJZH1gLFxuICAgICAgICBhbmNob3JET01FbGVtZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihzZWxlY3Rvcik7XG5cbiAgcmV0dXJuIGFuY2hvckRPTUVsZW1lbnQ7XG59XG5cbmZ1bmN0aW9uIGNsYXNzTmFtZUZyb21FbGVtZW50KGVsZW1lbnQpIHtcbiAgY29uc3QgZG9tRWxlbWVudCA9IGVsZW1lbnQuZ2V0RE9NRWxlbWVudCgpLFxuICAgICAgICB7IGNsYXNzTmFtZSB9ID0gZG9tRWxlbWVudDtcblxuICByZXR1cm4gY2xhc3NOYW1lO1xufVxuXG5mdW5jdGlvbiBhZGRDbGFzc05hbWVUb0RPTUVsZW1lbnQoZG9tRWxlbWVudCwgY2xhc3NOYW1lKSB7XG4gIGNvbnN0IHsgY2xhc3NMaXN0IH0gPSBkb21FbGVtZW50O1xuXG4gIGNsYXNzTGlzdC5hZGQoY2xhc3NOYW1lKTtcbn1cbiJdLCJuYW1lcyI6WyJlbGVtZW50RnJvbURPTUVsZW1lbnQiLCJlbGVtZW50c0Zyb21ET01FbGVtZW50cyIsImZpbmREaXZCeUFuY2hvcklkIiwic2Nyb2xsVG9BbmNob3IiLCJkb21FbGVtZW50cyIsIkVsZW1lbnQiLCJlbGVtZW50cyIsIm1hcCIsImRvbUVsZW1lbnQiLCJlbGVtZW50IiwiY2xhc3NOYW1lIiwiY2xhc3NOYW1lRnJvbUVsZW1lbnQiLCJhZGRDbGFzc05hbWVUb0RPTUVsZW1lbnQiLCJfX2VsZW1lbnRfXyIsImFuY2hvcklkIiwic2VsZWN0b3IiLCJESVZfU0VMRUNUT1IiLCJhbmNob3JET01FbGVtZW50IiwiZmluZEFuY2hvckRPTUVsZW1lbnQiLCJkaXZET01FbGVtZW50IiwiY2xvc2VzdCIsImRpdiIsInNjcm9sbEludG9WaWV3IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwiZ2V0RE9NRWxlbWVudCIsImNsYXNzTGlzdCIsImFkZCJdLCJyYW5nZU1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OzsiLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7O0lBY2dCQSxxQkFBcUI7ZUFBckJBOztJQVZBQyx1QkFBdUI7ZUFBdkJBOztJQTJCQUMsaUJBQWlCO2VBQWpCQTs7SUFVQUMsY0FBYztlQUFkQTs7O3lCQXZDYTtBQUV0QixTQUFTRix3QkFBd0JHLFdBQVcsRUFBRUMsT0FBTztJQUMxRCxJQUFNQyxXQUFXRixZQUFZRyxHQUFHLENBQUMsU0FBQ0M7UUFDaEMsSUFBTUMsVUFBVVQsc0JBQXNCUSxZQUFZSDtRQUVsRCxPQUFPSTtJQUNUO0lBRUEsT0FBT0g7QUFDVDtBQUVPLFNBQVNOLHNCQUFzQlEsVUFBVSxFQUFFSCxPQUFPO0lBQ3ZELElBQU1JLHdCQUVFLG9CQUFDSixnQkFHSEssWUFBWUMscUJBQXFCRjtJQUV2Q0cseUJBQXlCSixZQUFZRTtJQUVyQ0QsUUFBUUQsVUFBVSxHQUFHQSxZQUFhLEdBQUc7SUFFckNBLFdBQVdLLFdBQVcsR0FBR0osU0FBUyxHQUFHO0lBRXJDLE9BQU9BO0FBQ1Q7QUFFTyxTQUFTUCxrQkFBa0JZLFFBQVE7SUFDeEMsSUFBTUMsV0FBV0MsdUJBQVksRUFDdkJDLG1CQUFtQkMscUJBQXFCSixXQUN4Q0ssZ0JBQWdCRixpQkFBaUJHLE9BQU8sQ0FBQ0w7SUFFL0MsSUFBUUYsQUFBYVEsTUFBUUYsY0FBckJOO0lBRVIsT0FBT1E7QUFDVDtBQUVPLFNBQVNsQixlQUFlVyxRQUFRO0lBQ3JDLElBQU1HLG1CQUFtQkMscUJBQXFCSjtJQUU5Q0csaUJBQWlCSyxjQUFjO0FBQ2pDO0FBRUEsU0FBU0oscUJBQXFCSixRQUFRO0lBQ3BDLElBQU1DLFdBQVcsQUFBQyxLQUFhLE9BQVRELFdBQ2hCRyxtQkFBbUJNLFNBQVNDLGFBQWEsQ0FBQ1Q7SUFFaEQsT0FBT0U7QUFDVDtBQUVBLFNBQVNOLHFCQUFxQkYsT0FBTztJQUNuQyxJQUFNRCxhQUFhQyxRQUFRZ0IsYUFBYSxJQUNsQyxBQUFFZixZQUFjRixXQUFkRTtJQUVSLE9BQU9BO0FBQ1Q7QUFFQSxTQUFTRSx5QkFBeUJKLFVBQVUsRUFBRUUsU0FBUztJQUNyRCxJQUFNLEFBQUVnQixZQUFjbEIsV0FBZGtCO0lBRVJBLFVBQVVDLEdBQUcsQ0FBQ2pCO0FBQ2hCIn0=